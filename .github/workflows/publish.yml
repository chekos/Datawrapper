name: Publish package to PyPI

on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.1.4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: make download-poetry

    - name: Set up cache
      uses: actions/cache@v2.1.5
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        source "$HOME/.poetry/env"
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run safety checks
      run: |
        source "$HOME/.poetry/env"
        STRICT=1 make check-safety

    - name: Run style checks
      run: |
        source "$HOME/.poetry/env"
        STRICT=1 make check-style

    - name: Run tests
      run: |
        source "$HOME/.poetry/env"
        make test

    - name: Publish to PyPI
      run: |
        make download-poetry 
        source "$HOME/.poetry/env"
        poetry config virtualenvs.in-project true
        poetry publish --build --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}
